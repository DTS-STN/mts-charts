apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
{{- if .Values.extraEnv }}
{{ toYaml .Values.extraEnv | indent 10 }}
{{- end }}
          - name: LD_PRELOAD
            value: /opt/dynatrace/oneagent/agent/lib64/liboneagentproc.so
          volumeMounts:
          - mountPath: /opt/dynatrace/oneagent
            name: oneagent
          ports:
            - name: http
              {{ if .Values.port }}
              containerPort: {{ .Values.port }}
              {{ else }}
              containerPort: 3000
              {{ end }}
              protocol: TCP
          livenessProbe:
            httpGet:
              {{ if .Values.livenessProbeURL }}
              path: {{ .Values.livenessProbeURL }}
              {{ else }}
              path: /
              {{ end }}
              {{ if .Values.livenessProbePort }}
              port: .Values.livenessProbePort
              {{ else }}
              port: http
              {{ end }}
            initialDelaySeconds: {{ .Values.livenessDelay }}
          readinessProbe:
            httpGet:
              {{ if .Values.readinessProbeURL }}
              path: {{ .Values.readinessProbeURL }}
              {{ else }}
              path: /
              {{ end }}
              {{ if .Values.readinessProbePort }}
              port: .Values.readinessProbePort
              {{ else }}
              port: http
              {{ end }}
            initialDelaySeconds: {{ .Values.readinessDelay }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.dynatrace.enabled }}            
    # initcontainer to download OneAgent
      initContainers:
      - name: install-oneagent
        image: alpine:3.8
        command:
        - /bin/sh
        args:
        - -c
        - ARCHIVE=$(mktemp) && wget -O $ARCHIVE "$DT_API_URL/v1/deployment/installer/agent/unix/paas/latest?Api-Token=$DT_PAAS_TOKEN&$DT_ONEAGENT_OPTIONS" && unzip -o -d /opt/dynatrace/oneagent $ARCHIVE && rm -f $ARCHIVE
        env:
        - name: DT_API_URL
          value: https://{{ .Values.dynatrace.environmentId }}.live.dynatrace.com/api
        - name: DT_PAAS_TOKEN
          value: {{ .Values.dynatrace.paasToken }}
        - name: DT_ONEAGENT_OPTIONS
          value: {{ .Values.dynatrace.options }}
        volumeMounts:
        - mountPath: /opt/dynatrace/oneagent
          name: oneagent

    # Make OneAgent available as a volume
      volumes:
      - name: oneagent
        emptyDir: {}        
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
